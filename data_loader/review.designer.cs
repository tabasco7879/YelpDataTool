#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JsonDataImporter
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="yelp")]
	public partial class ReviewDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertreview(review instance);
    partial void Updatereview(review instance);
    partial void Deletereview(review instance);
    partial void Insertreview_vote(review_vote instance);
    partial void Updatereview_vote(review_vote instance);
    partial void Deletereview_vote(review_vote instance);
    #endregion
		
		public ReviewDataContext() : 
				base(global::JsonDataImporter.Properties.Settings.Default.yelpConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ReviewDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReviewDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReviewDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReviewDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<review> reviews
		{
			get
			{
				return this.GetTable<review>();
			}
		}
		
		public System.Data.Linq.Table<review_vote> review_votes
		{
			get
			{
				return this.GetTable<review_vote>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.review")]
	public partial class review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _review_id;
		
		private string _user_id;
		
		private string _business_id;
		
		private string _text;
		
		private System.Nullable<decimal> _stars;
		
		private string _type;
		
		private System.Nullable<System.DateTime> _date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreview_idChanging(string value);
    partial void Onreview_idChanged();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    partial void Onbusiness_idChanging(string value);
    partial void Onbusiness_idChanged();
    partial void OntextChanging(string value);
    partial void OntextChanged();
    partial void OnstarsChanging(System.Nullable<decimal> value);
    partial void OnstarsChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public review()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_id", DbType="NChar(22) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string review_id
		{
			get
			{
				return this._review_id;
			}
			set
			{
				if ((this._review_id != value))
				{
					this.Onreview_idChanging(value);
					this.SendPropertyChanging();
					this._review_id = value;
					this.SendPropertyChanged("review_id");
					this.Onreview_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="NChar(22)")]
		public string user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_business_id", DbType="NChar(22)")]
		public string business_id
		{
			get
			{
				return this._business_id;
			}
			set
			{
				if ((this._business_id != value))
				{
					this.Onbusiness_idChanging(value);
					this.SendPropertyChanging();
					this._business_id = value;
					this.SendPropertyChanged("business_id");
					this.Onbusiness_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="NVarChar(MAX)")]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this.OntextChanging(value);
					this.SendPropertyChanging();
					this._text = value;
					this.SendPropertyChanged("text");
					this.OntextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stars", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> stars
		{
			get
			{
				return this._stars;
			}
			set
			{
				if ((this._stars != value))
				{
					this.OnstarsChanging(value);
					this.SendPropertyChanging();
					this._stars = value;
					this.SendPropertyChanged("stars");
					this.OnstarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(20)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.review_vote")]
	public partial class review_vote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _review_vote_id;
		
		private string _review_id;
		
		private System.Nullable<int> _funny;
		
		private System.Nullable<int> _useful;
		
		private System.Nullable<int> _cool;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreview_vote_idChanging(long value);
    partial void Onreview_vote_idChanged();
    partial void Onreview_idChanging(string value);
    partial void Onreview_idChanged();
    partial void OnfunnyChanging(System.Nullable<int> value);
    partial void OnfunnyChanged();
    partial void OnusefulChanging(System.Nullable<int> value);
    partial void OnusefulChanged();
    partial void OncoolChanging(System.Nullable<int> value);
    partial void OncoolChanged();
    #endregion
		
		public review_vote()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_vote_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long review_vote_id
		{
			get
			{
				return this._review_vote_id;
			}
			set
			{
				if ((this._review_vote_id != value))
				{
					this.Onreview_vote_idChanging(value);
					this.SendPropertyChanging();
					this._review_vote_id = value;
					this.SendPropertyChanged("review_vote_id");
					this.Onreview_vote_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review_id", DbType="NChar(22) NOT NULL", CanBeNull=false)]
		public string review_id
		{
			get
			{
				return this._review_id;
			}
			set
			{
				if ((this._review_id != value))
				{
					this.Onreview_idChanging(value);
					this.SendPropertyChanging();
					this._review_id = value;
					this.SendPropertyChanged("review_id");
					this.Onreview_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_funny", DbType="Int")]
		public System.Nullable<int> funny
		{
			get
			{
				return this._funny;
			}
			set
			{
				if ((this._funny != value))
				{
					this.OnfunnyChanging(value);
					this.SendPropertyChanging();
					this._funny = value;
					this.SendPropertyChanged("funny");
					this.OnfunnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useful", DbType="Int")]
		public System.Nullable<int> useful
		{
			get
			{
				return this._useful;
			}
			set
			{
				if ((this._useful != value))
				{
					this.OnusefulChanging(value);
					this.SendPropertyChanging();
					this._useful = value;
					this.SendPropertyChanged("useful");
					this.OnusefulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cool", DbType="Int")]
		public System.Nullable<int> cool
		{
			get
			{
				return this._cool;
			}
			set
			{
				if ((this._cool != value))
				{
					this.OncoolChanging(value);
					this.SendPropertyChanging();
					this._cool = value;
					this.SendPropertyChanged("cool");
					this.OncoolChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
